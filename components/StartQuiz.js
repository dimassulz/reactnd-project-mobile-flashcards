import PropType from 'prop-types';import React, {Component} from 'react';import {    StyleSheet,    Text,    TouchableOpacity,    View} from 'react-native';const propTypes = {    navigation: PropType.object.isRequired};class StartQuiz extends Component {    state = {        count: 0,        correct: 0,        showAnswer: false    };    onPressCorrect = () => {        this.setState(state => ({            count: state.count + 1,            correct: state.correct + 1,            showAnswer: false        }));    };    onPressIncorrect = () => {        this.setState(state => ({            count: state.count + 1,            showAnswer: false        }));    };    onPressRestartQuiz = () => {        this.setState({            count: 0,            correct: 0,            showAnswer: false        });    };    goToDeck = () => {        this.props.navigation.goBack()    };    showAnswer = () => {        this.setState({showAnswer: !this.state.showAnswer})    };    render() {        const {count, correct, showAnswer} = this.state;        const {questions, title} = this.props.navigation.state.params.deck;        let score = ((correct / (this.state.correct + (questions.length - this.state.correct))) *100).toFixed(0);        if (count === questions.length) {            //clearLocalNotification();            return (                <View style={css.container}>                    <Text style={css.text}>Seu percentual de acerto foi de:</Text>                    <Text style={css.textScore}>{ score }%</Text>                    <Text style={css.text}>                        VocÃª acertou {correct} de {questions.length}                    </Text>                    <TouchableOpacity style={css.btn} onPress={this.onPressRestartQuiz}>                        <Text style={css.btnName}>Reset Quiz</Text>                    </TouchableOpacity>                    <TouchableOpacity style={css.btn} onPress={this.goToDeck}>                        <Text style={css.btnName}>Voltar ao Baralho {title}</Text>                    </TouchableOpacity>                </View>            );        }        return (            <View style={css.container}>                <Text>Pergunta {this.state.count + 1} de {questions.length}</Text>                {showAnswer ?                    <Text style={css.text}>{questions[count].answer}</Text> :                    <Text style={css.text}>{questions[count].question}</Text>}                {showAnswer ?                    <TouchableOpacity style={css.btn} onPress={this.showAnswer}>                        <Text style={css.btnName}>Mostrar Pergunta</Text>                    </TouchableOpacity> :                    <TouchableOpacity style={css.btn} onPress={this.showAnswer}>                        <Text style={css.btnName}>Mostrar Resposta</Text>                    </TouchableOpacity>}                <TouchableOpacity style={css.btn} onPress={this.onPressCorrect}>                    <Text style={css.btnName}>Correta</Text>                </TouchableOpacity>                <TouchableOpacity style={css.btn} onPress={this.onPressIncorrect}>                    <Text style={css.btnName}>Incorreta</Text>                </TouchableOpacity>            </View>        );    }}StartQuiz.propTypes = propTypes;const css = StyleSheet.create({    container: {        flex: 1,        padding: 30,        justifyContent: 'center',        alignItems: 'center'    },    textScore: {        fontSize: 40,        marginBottom: 30,        fontWeight: 'bold'    },    text: {        fontSize: 26,        marginTop: 24,    },    btn: {        marginTop: 20,        marginBottom: 20,        padding: 0,        width: 380,        height: 60,        alignSelf: 'center',        justifyContent: 'center',        alignItems: 'center',        backgroundColor: 'red',        borderWidth: 1,        borderColor: '#FFF'    },    btnName: {        color: 'white',        fontSize: 20,        textAlign: 'center',    }});export default StartQuiz;